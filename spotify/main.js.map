{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/game/finish/finish.component.ts","./src/app/components/game/finish/finish.component.html","./src/app/components/game/main/main.component.ts","./src/app/components/game/main/main.component.html","./src/app/components/game/play/play.component.ts","./src/app/components/game/play/play.component.html","./src/app/components/game/start/start.component.ts","./src/app/components/game/start/start.component.html","./src/app/components/login-callback/login-callback.component.ts","./src/app/components/login-callback/login-callback.component.html","./src/app/components/player/player.component.ts","./src/app/components/player/player.component.html","./src/app/components/search/album-search/album-search.component.ts","./src/app/components/search/album-search/album-search.component.html","./src/app/components/search/main-search/main-search.component.ts","./src/app/components/search/main-search/main-search.component.html","./src/app/components/search/playlist-search/playlist-search.component.ts","./src/app/components/search/playlist-search/playlist-search.component.html","./src/app/services/api/spotify.service.ts","./src/app/services/game.service.ts","./src/app/services/player.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FinishComponent } from './components/game/finish/finish.component';\nimport { MainComponent } from './components/game/main/main.component';\nimport { PlayComponent } from './components/game/play/play.component';\nimport { StartComponent } from './components/game/start/start.component';\nimport { LoginCallbackComponent } from './components/login-callback/login-callback.component';\nimport { AlbumSearchComponent } from './components/search/album-search/album-search.component';\nimport { MainSearchComponent } from './components/search/main-search/main-search.component';\nimport { PlaylistSearchComponent } from './components/search/playlist-search/playlist-search.component';\n\nconst routes: Routes = [\n  {path: '', redirectTo: '/spotify', pathMatch: 'full' },\n  {path: 'spotify', component: MainSearchComponent, \n    children: [\n      {path: 'album', component: AlbumSearchComponent},\n      {path: 'playlist', component: PlaylistSearchComponent},\n    ]},\n  {path: 'callback', component: LoginCallbackComponent},\n  {path: 'game', component: MainComponent,\n    children: [\n      {path: '', component: StartComponent},\n      {path: 'play', component: PlayComponent},\n      {path: 'finish', component: FinishComponent},\n    ]},\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnDestroy } from '@angular/core';\nimport { SpotifyService } from './services/api/spotify.service';\nimport { PlayerService } from './services/player.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less']\n})\nexport class AppComponent {\n  constructor(private spotify: SpotifyService, private player: PlayerService) {\n    const script = document.createElement(\"script\");\n    script.src = \"https://sdk.scdn.co/spotify-player.js\";\n    script.async = true;\n\n    document.body.appendChild(script);\n    \n    window.onSpotifyWebPlaybackSDKReady = () => {\n      this.player.initSpotifyWebPlayer(this.spotify.getToken());\n      this.player.connect();\n    }\n    window.onbeforeunload = () => this.player.disconnect();;\n   \n  }\n  \n}\n","<div class=\"center\">\n    <a style=\"text-decoration: none \" [routerLink]=\"['/spotify']\">\n        <h2>Spordlfy</h2>\n    </a>\n    <router-outlet></router-outlet>\n</div>\n\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { LoginCallbackComponent } from './components/login-callback/login-callback.component';\nimport { PlayerComponent } from './components/player/player.component';\nimport { MainComponent } from './components/game/main/main.component';\nimport { PlayComponent } from './components/game/play/play.component';\nimport { StartComponent } from './components/game/start/start.component';\nimport { FinishComponent } from './components/game/finish/finish.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatListModule} from '@angular/material/list'\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport {MatIconModule} from '@angular/material/icon';\n\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MainSearchComponent } from './components/search/main-search/main-search.component';\nimport { PlaylistSearchComponent } from './components/search/playlist-search/playlist-search.component';\nimport { AlbumSearchComponent } from './components/search/album-search/album-search.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AlbumSearchComponent,\n    PlaylistSearchComponent,\n    LoginCallbackComponent,\n    PlayerComponent,\n    MainComponent,\n    PlayComponent,\n    StartComponent,\n    FinishComponent,\n    MainSearchComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatFormFieldModule,\n    MatListModule,\n    MatAutocompleteModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    FormsModule,\n    MatProgressBarModule,\n    MatCardModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatIconModule,\n    ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { Track } from 'src/app/models/track';\nimport { GameService } from 'src/app/services/game.service';\n\n@Component({\n  selector: 'app-finish',\n  templateUrl: './finish.component.html',\n  styleUrls: ['./finish.component.less']\n})\nexport class FinishComponent implements OnInit {\n  track!: Track;\n  guessedCorrectly = false;\n\n  constructor(private game: GameService) { }\n\n\n  ngOnInit(): void {\n    this.guessedCorrectly = this.game.guessedCorrect\n    this.track = this.game.currentTrack;\n  }\n\n}\n","<mat-card *ngIf=\"guessedCorrectly\">\n    <mat-card-content>  \n        <p>Good Job! {{track.name}} is the correct answer.</p>\n    </mat-card-content>\n</mat-card>\n<mat-card *ngIf=\"!guessedCorrectly\">\n    <mat-card-content>  \n        <p>Wrong! {{track.name}} is the correct answer.</p>\n    </mat-card-content>\n</mat-card>\n<mat-card>\n    <mat-card-content>  \n        <button mat-raised-button [routerLink]=\"['/game/play']\">Next Track</button>\n    </mat-card-content>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { SpotifyService } from 'src/app/services/api/spotify.service';\nimport { Album } from 'src/app/models/album';\nimport { Track } from 'src/app/models/track';\nimport { GameService } from 'src/app/services/game.service';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.less']\n})\nexport class MainComponent implements OnInit {\n\n\n  constructor(private route: ActivatedRoute, private game: GameService) { \n\n  }\n\n  ngOnInit(): void {\n  }\n\n\n\n \n}\n\n\n","<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { GameService } from 'src/app/services/game.service';\nimport {FormControl} from '@angular/forms';\nimport { map, Observable, startWith } from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-play',\n  templateUrl: './play.component.html',\n  styleUrls: ['./play.component.less']\n})\nexport class PlayComponent implements OnInit {\n\n  guessResult = '';\n  trackGuess = new FormControl('');\n  options!: string[];\n  filteredOptions!: Observable<string[]>;\n  guessNumber = 0;\n  guesses: string[] = [];\n\n  constructor(private game: GameService, private router: Router) { \n    this.game.tracks$.subscribe(tracks => {\n      this.options = tracks.map(function (track) {\n        return track.name;\n      });\n    });\n  }\n\n  ngOnInit(): void {    \n    this.filteredOptions = this.trackGuess.valueChanges.pipe(\n      startWith(''),\n      map(value => this._filter(value || '')),\n    );\n\n    this.game.chooseRandomSong();\n    this.game.playSong();\n    this.guessNumber = 0;\n    this.guesses = [];\n  }\n\n  playAgain(): void {\n    this.game.playSongAgain();\n  }\n\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n\n    return this.options.filter(option => option.toLowerCase().includes(filterValue));\n  }\n\n  skipTry() {\n    this.game.skip()\n    this.guesses[this.guessNumber] = '    skipped';\n    this.guessNumber++;\n    if (this.guessNumber > 4) {\n      this.router.navigateByUrl('/game/finish');\n    }\n  }\n  \n  checkGuess() {\n    if (this.trackGuess.getRawValue() === this.game.currentTrack.name) {\n      this.game.correctGuess();    \n      this.router.navigateByUrl('/game/finish');\n    } else {\n      this.game.incorrectGuess();\n      this.guesses[this.guessNumber] = '[X] ' + this.trackGuess.getRawValue();\n      this.guessNumber++;\n    }\n    this.trackGuess.setValue('')\n   \n    if (this.guessNumber > 4) {\n      this.router.navigateByUrl('/game/finish');\n    }\n  }\n\n}\n","<mat-card>\r\n    <mat-card-content>  \r\n        <mat-list>\r\n            <mat-list-item *ngFor=\"let guess of guesses\">\r\n                <div matLine>\r\n                    <p>{{guess}}</p>\r\n                </div>                \r\n            </mat-list-item>\r\n        </mat-list>\r\n    </mat-card-content>\r\n</mat-card>\r\n<mat-card>\r\n<app-player></app-player>\r\n<mat-card>\r\n    <mat-card-content>  \r\n        <form class=\"example-form\">\r\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\r\n                <mat-label>Guess:</mat-label>\r\n                <input type=\"text\"\r\n                        placeholder=\"Pick a track\"\r\n                        aria-label=\"Number\"\r\n                        matInput\r\n                        [formControl]=\"trackGuess\"\r\n                        [matAutocomplete]=\"auto\"\r\n                        (keyup.enter)=\"checkGuess()\"\r\n                        >\r\n                <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\">\r\n                    <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\r\n                        {{option}}\r\n                    </mat-option>\r\n                </mat-autocomplete>\r\n            </mat-form-field>\r\n        </form>\r\n    </mat-card-content>\r\n</mat-card>\r\n<mat-card>\r\n    <mat-card-content>  \r\n        <label>{{guessResult}}</label>\r\n        <div class=\"example-button-row\">\r\n            <button class=\"flex-button\" mat-raised-button color=\"primary\" (click)=\"skipTry()\">Skip</button>\r\n            <button class=\"flex-button\" mat-raised-button color=\"primary\" (click)=\"playAgain()\">Play again</button>\r\n            <button class=\"flex-button\" mat-raised-button color=\"primary\" (click)=\"checkGuess()\">Submit</button>\r\n        </div>\r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { TitleStrategy } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { Track } from 'src/app/models/track';\nimport { GameService } from 'src/app/services/game.service';\n\n@Component({\n  selector: 'app-start',\n  templateUrl: './start.component.html',\n  styleUrls: ['./start.component.less']\n})\nexport class StartComponent implements OnInit, OnDestroy {\n\n  tracks!: Track[];\n  trackSubscription: Subscription;\n  listName = '';\n  listNameSubscription: Subscription;\n\n\n  constructor(private game: GameService) { \n    this.trackSubscription = game.tracks$.subscribe(tracks => {\n      this.tracks = tracks;      \n    })\n    this.listNameSubscription = game.listName$.subscribe(listName => {\n      this.listName = listName;\n    })\n  }\n\n  startGame() {\n    throw new Error('Method not implemented.');\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy(): void {\n    this.trackSubscription.unsubscribe();\n    this.listNameSubscription.unsubscribe();\n  }\n\n}\n","<mat-card *ngIf=\"tracks\">\n    <mat-card-content>  \n        <div style=\"text-align: center; display: flex;\">\n            <p style=\"margin: auto; margin-left:0%\">Do you want to start a game with these songs?</p>\n            <button style=\"margin-left:auto;\" mat-raised-button color=\"primary\" [routerLink]=\"['play']\">Play!</button>\n        </div>\n    </mat-card-content>\n</mat-card>\n<mat-divider></mat-divider>\n<mat-card *ngIf=\"tracks\">\n    <mat-card-content>   \n        <mat-label>{{listName}}</mat-label>\n        <mat-list>\n            <mat-list-item *ngFor=\"let track of tracks\">\n                <div matLine>\n                    <p style=\"float:left\">{{track.artists[0].name}}</p>\n                    <p style=\"float:right\">{{track.name}}</p>\n                </div>                \n            </mat-list-item>\n        </mat-list>\n    </mat-card-content>\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { SpotifyService } from 'src/app/services/api/spotify.service';\n\n@Component({\n  selector: 'app-login-callback',\n  templateUrl: './login-callback.component.html',\n  styleUrls: ['./login-callback.component.less']\n})\nexport class LoginCallbackComponent implements OnInit {\n\n  constructor( \n    private router: Router,\n    private route: ActivatedRoute,  \n    private spotifyService: SpotifyService\n  ) { }\n\n  ngOnInit(): void {\n    this.route.fragment.subscribe((fragment: any) => {\n      var access_token = new URLSearchParams(fragment).get('access_token');\n      \n      if (access_token != null) {\n        this.spotifyService.setAccessToken(access_token);\n      }\n      this.router.navigateByUrl('/spotify')\n\n  })\n  }\n\n}\n","<p>login-callback works!</p>\n","import { Component, NgZone, OnDestroy, OnInit } from '@angular/core';\nimport { interval, Observable, Subscription, timer } from 'rxjs';\nimport { SpotifyService } from 'src/app/services/api/spotify.service';\nimport { PlayerService } from 'src/app/services/player.service';\n\n@Component({\n  selector: 'app-player',\n  templateUrl: './player.component.html',\n  styleUrls: ['./player.component.less']\n})\nexport class PlayerComponent implements OnInit, OnDestroy {\n  currentTrack!: String;\n  progressValue = 0;\n  bufferValue = 0;\n  trackDuration!: number;\n\n  timer;\n\n  progressSubscription: Subscription | undefined;\n  paused: Boolean = true;\n\n  constructor(private player: PlayerService, private ngZone: NgZone ) { \n     player.position$.subscribe(position => {\n      this.progressValue = (position.valueOf()/this.trackDuration) * 100;\n     // this.bufferValue = ((position.valueOf() + 1000)/this.trackDuration) * 100;\n    });\n\n    player.paused$.subscribe(paused => {\n      this.paused = paused;\n    })\n\n    player.currentTrack$.subscribe(currentTrack => {\n      this.ngZone.run(() => {\n        this.currentTrack = currentTrack.name;\n        this.trackDuration = currentTrack.duration_ms;\n     });\n    });\n\n    this.timer = timer(0, 1000);\n    this.timer.subscribe((t) => {\n      if (!this.paused) {\n        this.progressValue++;\n      }\n    })\n  }\n\n  previousTrack() {\n    this.player.previousTrack();\n  }\n\n  togglePlay() {    \n    this.player.togglePlay();\n  }\n\n  nextTrack() {\n    this.player.nextTrack();\n  }\n  \n\n  ngOnDestroy() {\n\n  }\n\n  ngOnInit(): void {\n  }\n}","<mat-card>\n    <mat-card-content>    \n        <mat-progress-bar\n          class=\"example-margin\"\n          mode=\"determinate\"\n          [value]=\"progressValue\"\n          [bufferValue]=\"bufferValue\">\n      </mat-progress-bar>\n    </mat-card-content>\n</mat-card>\n\n<!-- <label>Spielt gerade: {{currentTrack}}</label>\n<div>\n    <button (click)=\"previousTrack()\">Prev</button>\n    <button (click)=\"togglePlay()\">Toggle Play</button>\n    <button (click)=\"nextTrack()\">Next</button>\n</div> -->\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {SpotifyService } from 'src/app/services/api/spotify.service';\nimport { Album } from 'src/app/models/album';\nimport { SearchItem } from 'src/app/models/search-item';\nimport { PlayerService } from 'src/app/services/player.service';\nimport { FormControl } from '@angular/forms';\nimport { GameService } from 'src/app/services/game.service';\n\n@Component({\n  selector: 'app-album-search',\n  templateUrl: './album-search.component.html',\n  styleUrls: ['./album-search.component.less']\n})\nexport class AlbumSearchComponent implements OnInit {\n\n  albums: Album[] = [];\n  searchForm = new FormControl('');\n\n  constructor(private spotify: SpotifyService, private player: PlayerService, private game: GameService) {}\n    \n  search() {   \n    if (this.searchForm.getRawValue() != null) {      \n      this.spotify.albumSearch(this.searchForm.getRawValue()!).subscribe(\n        (result:SearchItem) => {\n          this.albums = result.albums.items;\n        }\n      );\n    }\n  }\n\n  play(album: Album) {\n    this.player.playAlbum(album.uri);\n  }\n\n  startGame(album: Album) {   \n    this.game.loadTrackListForAlbum(album.id);\n  }\n    \n  ngOnInit(): void {}\n\n}\n","<mat-card>\n    <mat-card-content>  \n        <form class=\"example-form\">\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\n                <mat-label>Album Search:</mat-label>\n                <input type=\"text\"\n                    aria-label=\"Number\"\n                    matInput\n                    [formControl] = \"searchForm\"\n                    autocomplete=\"off\"\n                    (keyup.enter)=\"search()\"\n                    >\n            </mat-form-field>\n        </form>\n    </mat-card-content>\n</mat-card>\n<mat-card *ngIf=\"albums\">\n    <mat-card-content>  \n        <mat-nav-list>\n            <mat-list-item [routerLink]=\"['/game']\" (click)=\"startGame(album)\" *ngFor=\"let album of albums\"> \n                <div matLine>\n                    <p style=\"float:left\">{{album.artists[0].name}}</p>\n                    <p style=\"float:right\">{{album.name}}</p>\n                </div>      \n                </mat-list-item>\n            </mat-nav-list>\n    </mat-card-content>\n</mat-card>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main-search',\n  templateUrl: './main-search.component.html',\n  styleUrls: ['./main-search.component.less']\n})\nexport class MainSearchComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card>\n    <mat-card-content>  \n        <div class=\"example-button-row\">\n            <button class=\"flex-button\" mat-raised-button color=\"primary\" [routerLink]=\"['album']\" >Albums</button>\n            <button class=\"flex-button\" mat-raised-button color=\"primary\" [routerLink]=\"['playlist']\">Playlists</button>\n        </div>\n    </mat-card-content>\n</mat-card>\n<router-outlet></router-outlet>\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Playlist } from 'src/app/models/playlist';\nimport { SearchItem } from 'src/app/models/search-item';\nimport { SpotifyService } from 'src/app/services/api/spotify.service';\nimport { GameService } from 'src/app/services/game.service';\nimport { PlayerService } from 'src/app/services/player.service';\n\n@Component({\n  selector: 'app-playlist-search',\n  templateUrl: './playlist-search.component.html',\n  styleUrls: ['./playlist-search.component.less']\n})\nexport class PlaylistSearchComponent implements OnInit {\n\n  playlists: Playlist[] = [];\n  searchForm = new FormControl('');\n\n  constructor(private spotify: SpotifyService, private player: PlayerService, private game: GameService) {}\n    \n\n  startGame(playList: Playlist) {   \n    this.game.loadTrackListForPlayList(playList.id);\n  }\n\n  ngOnInit(): void {\n    this.spotify.loadMyPlaylists().subscribe((result) => {\n      console.log(result);\n      \n      this.playlists = result.items;\n    });\n  }\n\n}\n","<mat-card *ngIf=\"playlists\">\n    <mat-card-content>  \n        <mat-nav-list>\n            <mat-list-item [routerLink]=\"['/game']\" (click)=\"startGame(playlist)\" *ngFor=\"let playlist of playlists\"> \n                <div matLine>\n                    <p style=\"float:right\">{{playlist.name}}</p>\n                </div>      \n                </mat-list-item>\n            </mat-nav-list>\n    </mat-card-content>\n</mat-card>\n\n","import { Injectable, isDevMode } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { EMPTY, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SpotifyService {\n \n  constructor(private http: HttpClient) {} \n  \n  headers: HttpHeaders|undefined;\n  access_token: string = '';\n\n  apiBase = 'https://api.spotify.com/v1';\n\n  public albumSearch(searchString: string) {\n    var url = this.apiBase + '/search?q=' + searchString + '&type=album';\n    return this.apiCall(url);\n  }\n\n  public loadMyPlaylists() {\n    var url = this.apiBase + '/me/playlists';\n    return this.apiCall(url);\n  }\n\n  public getAlbum(albumId: string) {\n    var url = this.apiBase + '/albums/' + albumId;\n    return this.apiCall(url);\n  }\n\n  public getPlaylist(playlistId: string) {\n    var url = this.apiBase + '/playlists/' + playlistId;\n    return this.apiCall(url);\n  }\n\n  private apiCall(url: string) {  \n    if (!this.headers) {      \n        this.login();\n        return EMPTY;\n    } else {   \n        return this.http.get<any>(url, { 'headers': this.headers });\n    }\n  }\n\n  playTrack(uri: string, device_id: string, position: number) { \n    var playUrl = 'https://api.spotify.com/v1/me/player/play?device_id=' + device_id;\n    var body = JSON.stringify({ uris: [uri], position_ms: position });\n    return this.http.put<any>(playUrl, body, { 'headers': this.headers });\n  }\n\n  playContext(context_uri: string, device_id: string) {\n    var url = 'https://api.spotify.com/v1/me/player/play?device_id=' + device_id;\n    var body = JSON.stringify({ context_uri: context_uri });\n    this.http.put<any>(url, body, { 'headers': this.headers }).subscribe();  \n  }\n\n  \n\n  login() {\n    var client_id = '1ec6cb1a181e47368d762606d2851929'; // Your client id\n    var redirect_uri = isDevMode() ? 'http://localhost:8888/callback' : 'https://dinolange.github.io/spotify-project/callback'; // Your redirect uri\n\n    // var state = generateRandomString(16);\n    // localStorage.setItem(stateKey, state);\n    var scope = 'streaming user-read-private user-read-email';\n\n    var url = 'https://accounts.spotify.com/authorize';\n    url += '?response_type=token';\n    url += '&client_id=' + encodeURIComponent(client_id);\n    url += '&scope=' + encodeURIComponent(scope);\n    url += '&redirect_uri=' + encodeURIComponent(redirect_uri);\n    // url += '&state=' + encodeURIComponent(state);\n    \n    location.href = url;       \n  }\n\n  setAccessToken(access_token: string) {\n    this.access_token = access_token;\n    this.headers = new HttpHeaders()\n    .set('Content-Type', 'application/json')\n    .set('Authorization', 'Bearer ' + access_token);\n  }\n\n  getToken(): string {    \n    if (!this.access_token) {\n      this.login();\n      return '';\n    } else {\n      return this.access_token;\n    }\n  }\n\n}","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { Album } from '../models/album';\nimport { Playlist, Item } from '../models/playlist';\nimport { Track } from '../models/track';\nimport { SpotifyService } from './api/spotify.service';\nimport { PlayerService } from './player.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GameService {\n\n\n  private tracks = new BehaviorSubject<Track[]>([]);\n  tracks$ = this.tracks.asObservable();\n  private listName = new BehaviorSubject<string>('');\n  listName$ = this.listName.asObservable();\n\n  currentTrack!: Track;\n  position: number = 0;\n  duration: number = 1;\n  guessedCorrect: boolean = false;\n  \n\n\n  constructor(private spotify: SpotifyService, private player: PlayerService) { }\n\n\n  loadTrackListForAlbum(id: string) {    \n    this.spotify.getAlbum(id).subscribe((result:Album) => {    \n      // limited to 50 tracks             \n      this.tracks.next(result.tracks.items);     \n      this.listName.next(result.name);     \n    });\n  }\n\n  loadTrackListForPlayList(id: string) {    \n    this.spotify.getPlaylist(id).subscribe((result:Playlist) => {    \n      console.log('getPlaylist', result);\n      \n      // limited to 50 tracks             \n      var items: Item[] = result.tracks.items;\n      this.tracks.next(\n        items.map(function(item) {\n          return item.track\n        }));     \n      this.listName.next(result.name);     \n    });\n  }\n\n  chooseRandomSong() {\n    var tracks = this.tracks.getValue();\n    this.duration = 1;\n    this.currentTrack = tracks[Math.floor(Math.random() * tracks.length)];\n  }\n\n  playSong() {\n    this.position = Math.floor(Math.random() * this.currentTrack.duration_ms)\n    if (this.currentTrack) {\n      this.player.initTrack(this.currentTrack.uri);\n      setTimeout(() => {\n        this.playSongAgain();\n      }, 1000)\n    }\n  }\n\n  playSongAgain() {\n    if (this.currentTrack) {\n      this.player.playCurrentTrack(this.position, this.duration)\n    }\n  }\n\n  skip() {\n    this.position = Math.floor(Math.random() * this.currentTrack.duration_ms)\n    this.duration += 1;\n    if (this.currentTrack) {\n      this.player.playCurrentTrack(this.position, this.duration)\n    }  \n  }\n\n  correctGuess() {\n    this.guessedCorrect = true;\n    \n  }\n\n  incorrectGuess() {\n    this.guessedCorrect = false;\n    this.skip();\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { SpotifyService } from './api/spotify.service';\nimport { Album } from '../models/album';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlayerService {\n\n\n  player!: Spotify.Player;\n  device_id!: string;\n  \n  currentTrack: Subject<Spotify.Track> = new Subject<Spotify.Track>();\n  currentTrack$: Observable<Spotify.Track> = this.currentTrack.asObservable();\n  position: Subject<Number> = new Subject<Number>();\n  position$: Observable<Number> = this.position.asObservable();\n  paused: Subject<Boolean> = new Subject<Boolean>();\n  paused$: Observable<Boolean> = this.paused.asObservable();\n  \n  forcePause = false;\n  forcePauseCounter = 0;\n  lastPaused: boolean = true;\n\n  constructor(private spotify: SpotifyService) { }\n\n\n  initTrack(uri: string) {\n    this.forcePause = true;\n    this.spotify.playTrack(uri, this.device_id, 0).subscribe(() => {});       \n  }\n\n  playCurrentTrack(position: number, duration: number) {\n    this.player.seek(position);\n    this.player.resume();\n    \n    setTimeout(() => \n      {\n        this.player.pause();\n      },\n      duration*1000\n    );\n  }\n\n  playAlbum(uri: string) {\n    this.spotify.playContext(uri, this.device_id);\n  }\n  \n  initSpotifyWebPlayer(token: string) {\n    this.player = new Spotify.Player({\n      name: 'Spordlfy',\n      getOAuthToken: cb => { cb(token); },\n      volume: 0.5\n    });\n\n    // Ready\n    this.player.addListener('ready', ({ device_id }) => {\n      this.device_id = device_id;\n      console.log('Ready with Device ID', device_id);\n    });\n\n    // Not Ready\n    this.player.addListener('not_ready', ({ device_id }) => {\n      console.log('Device ID has gone offline', device_id);\n    });\n\n    this.player.addListener('initialization_error', ({ message }) => {\n      console.error(message);\n    });\n\n    this.player.addListener('authentication_error', ({ message }) => {\n      console.error(message);\n    });\n\n    this.player.addListener('account_error', ({ message }) => {\n      console.error(message);\n    });\n\n    this.player.getCurrentState().then(state => {\n      if (!state) {\n        console.error('User is not playing music through the Web Playback SDK');\n        return;\n      }\n    \n      var current_track = state.track_window.current_track;\n      this.currentTrack.next(current_track);\n      var next_track = state.track_window.next_tracks[0];\n      \n    });\n\n    this.player.addListener('player_state_changed', ({\n      track_window: {current_track}, position\n    }) => {    \n      this.currentTrack.next(current_track);\n      this.position.next(position);\n    });\n\n    this.player.addListener('player_state_changed', ({paused}) => {\n      this.paused.next(paused);\n\n      if (this.forcePause && !paused) {\n        this.player.pause();\n      }\n      if (paused && !this.lastPaused) {\n        this.forcePause = false;      \n      }\n      this.lastPaused = paused;\n    });\n\n  }\n\n  connect() {\n    this.player.connect();\n  }\n\n  disconnect() {\n    this.player.disconnect();\n  }\n\n  togglePlay() {\n    this.player.togglePlay();\n  }\n\n  nextTrack() {\n    this.player.nextTrack();\n  }\n\n  previousTrack() {\n    this.player.previousTrack();\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["AppComponent","constructor","spotify","player","script","document","createElement","src","async","body","appendChild","window","onSpotifyWebPlaybackSDKReady","initSpotifyWebPlayer","getToken","connect","onbeforeunload","disconnect","i0","selectors","decls","vars","consts","template","FormControl","map","startWith","PlayComponent","game","router","tracks$","subscribe","tracks","options","track","name","ngOnInit","filteredOptions","trackGuess","valueChanges","pipe","value","_filter","chooseRandomSong","playSong","guessNumber","guesses","playAgain","playSongAgain","filterValue","toLowerCase","filter","option","includes","skipTry","skip","navigateByUrl","checkGuess","getRawValue","currentTrack","correctGuess","incorrectGuess","setValue","ctx","_r1"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}